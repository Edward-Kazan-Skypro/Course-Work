public class Main {
    public static void main(String[] args) {
        System.out.println();

        EmployeeBook employeeBook = new EmployeeBook();

        //Заполняем массив данными из списков, указанных в классе DataForEmployee
        //ФИО, название департамента и зарплата выбираются случайным образом
        for (int i = 0; i < 10; i++) {
            employeeBook.addEmployeeToEmployeeBook(new Employee(DataForEmployee.selectFullName(),
                    DataForEmployee.selectSalary(),
                    DataForEmployee.selectDepartment()));
        }

        //-------------------------------------------------------------------------------------
        //1 - Вызов ГЛОБАЛЬНЫХ методов

        //Вызов метода - добавление записи о сотруднике в список сотрудников (в массив)
        //Данный метод уже использовался когда заполняли массив employeeBook первоначальными данными

        //Метод - просмотр всех сотрудников со всеми данными по каждому сотруднику
        employeeBook.viewAllEmployees();
        System.out.println("------------------------------------------------------------------");

        //Метод - просмотр только ФИО всех сотрудников по всей организации
        employeeBook.viewFullNameList();
        System.out.println("------------------------------------------------------------------");

        //Метод - расчет суммы затрат на зарплаты всей организации в месяц
        employeeBook.sumOfSalary();
        System.out.println("------------------------------------------------------------------");

        //Метод - расчет средней зарплаты всех сотрудников по всей организации
        employeeBook.averageSalary();
        System.out.println("------------------------------------------------------------------");

        //Метод - поиск сотрудника с минимальной зарплатой по всей организации
        employeeBook.findMinimalSalary();
        System.out.println("------------------------------------------------------------------");

        //Метод - поиск сотрудника с максимальной зарплатой по всей организации
        employeeBook.findMaximalSalary();
        System.out.println("------------------------------------------------------------------");

        //Метод - поиск сотрудников с зарплатой меньше числа (вывести id, Ф. И. О. и зарплатой в консоль)
        employeeBook.findSalaryLessThan(5000);
        System.out.println("------------------------------------------------------------------");

        //Метод - поиск сотрудников с зарплатой больше числа (вывести id, Ф. И. О. и зарплатой в консоль)
        employeeBook.findSalaryMoreThan(5000);
        System.out.println("------------------------------------------------------------------");

        //Метод - индексация зарплаты всех сотрудников на величину, задаваемую параметром percent (%)
        employeeBook.allSalaryRecalculation(100);
        System.out.println("------------------------------------------------------------------");

        //Метод - просмотр всех сотрудников с разбивкой по отделам
        employeeBook.viewEmployeesByDepartment();
        System.out.println("------------------------------------------------------------------");

        //Метод - расчет средней зарплаты по департаментам (в консоль выводятся все департаменты)
        employeeBook.averageAllSalaryByDepartment();
        System.out.println("------------------------------------------------------------------");
        System.out.println("------------------------------------------------------------------");

        //-------------------------------------------------------------------------------------
        // 2 - Методы, отображающие информацию по указанному отделу.

        //Метод - отображение списка сотрудников указанного отдела
        employeeBook.viewEmployeesByDepartment("2");
        System.out.println("------------------------------------------------------------------");

        //Метод - поиск сотрудника с минимальной зарплатой по заданному отделу
        employeeBook.findMinimalSalaryByDepartment("2");
        System.out.println("------------------------------------------------------------------");

        //Метод - поиск сотрудника с максимальной зарплатой по заданному отделу
        employeeBook.findMaximalSalaryByDepartment("2");
        System.out.println("------------------------------------------------------------------");

        //Метод - расчет зарплаты сотрудников по заданному отделу
        employeeBook.averageSalaryByDepartment("2");
        System.out.println("------------------------------------------------------------------");

        //Метод - расчет средней зарплаты по заданному отделу
        employeeBook.sumOfSalaryByDepartment("2");
        System.out.println("------------------------------------------------------------------");

        //Метод - индексация зарплаты сотрудников отдела (надо указать) на величину, задаваемую параметром percent (%)
        employeeBook.salaryRecalculationByDepartment("2", 100);
        System.out.println("------------------------------------------------------------------");
        System.out.println("------------------------------------------------------------------");

        //-------------------------------------------------------------------------------------
        //3 - Методы, изменяющие данные по выбранному сотруднику

        //Метод - удаление записи о сотруднике по ID
        employeeBook.deleteEmployeeByID(10);
        System.out.println("------------------------------------------------------------------");

        //Добавим сотрудника с фиктивным ФИО для последующего удаления
        employeeBook.addNewEmployee("ABC", 10, "1");
        System.out.println("------------------------------------------------------------------");

        //Метод - удаление записи о сотруднике по ФИО (просто удаляем ранее добавленного сотрудника)
        employeeBook.deleteEmployeeByFullName("ABC");
        System.out.println("------------------------------------------------------------------");


        //Метод - изменение сведений о сотруднике (сотрудника выбираем по ФИО)
        //Для удобства снова добавим сотрудника с фиктивным ФИО
        employeeBook.addNewEmployee("ABC", 10, "1");
        System.out.println("------------------------------------------------------------------");
        employeeBook.editEmployeeByName("ABC", 1, "3");
        System.out.println("------------------------------------------------------------------");

        System.out.println();
        System.out.println("Работа программы завершена.");


    }
}